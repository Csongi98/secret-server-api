swagger: "2.0"
info:
  description: "This is an API of a secret service. You can save your secret by using the API. You can restrict the access of a secret after the certain number of views or after a certain period of time."
  version: "1.0.0"
  title: "Secret Server API"
host: "127.0.0.1:8000"
basePath: "/api"
tags:
- name: "secret"
  description: "Operations related to secrets"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "http"
paths:
  /secret:
    post:
      tags:
      - "secret"
      summary: "Add a new secret"
      description: ""
      operationId: "addSecret"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "application/xml"
      - "application/x-yaml"
      parameters:
      - in: "formData"
        name: "secret"
        description: "This text will be saved as a secret"
        required: true
        type: "string"
      - in: "formData"
        name: "expireAfterViews"
        description: "The secret won't be available after the given number of views. It must be greater than 0."
        required: true
        type: "integer"
        format: "int32"
      - in: "formData"
        name: "expireAfter"
        description: "The secret won't be available after the given time. The value is provided in minutes. 0 means never expires"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Secret"
        405:
          description: "Invalid input"
  /secret/{hash}:
    get:
      tags:
      - "secret"
      summary: "Find a secret by hash"
      description: "Returns a single secret"
      operationId: "getSecretByHash"
      produces:
      - "application/json"
      - "application/xml"
      - "application/x-yaml"
      parameters:
      - name: "hash"
        in: "path"
        description: "Unique hash to identify the secret"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Secret"
        404:
          description: "Secret not found"
  /secrets/search:
    get:
      tags:
      - "secret"
      summary: "Search secrets by metadata"
      description: "Search secrets by creation date, expiration date, or remaining views"
      operationId: "searchSecrets"
      produces:
      - "application/json"
      parameters:
      - name: "created_from"
        in: "query"
        description: "Start date for creation date range"
        required: false
        type: "string"
        format: "date-time"
      - name: "created_to"
        in: "query"
        description: "End date for creation date range"
        required: false
        type: "string"
        format: "date-time"
      - name: "expires_from"
        in: "query"
        description: "Start date for expiration date range"
        required: false
        type: "string"
        format: "date-time"
      - name: "expires_to"
        in: "query"
        description: "End date for expiration date range"
        required: false
        type: "string"
        format: "date-time"
      - name: "remaining_views"
        in: "query"
        description: "Filter by remaining views"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Secret"
        400:
          description: "Invalid query parameters"
  /secrets/{id}/logs:
    get:
      tags:
      - "secret"
      summary: "Get audit logs for a secret"
      description: "Retrieve audit logs showing who accessed or created the secret and when"
      operationId: "getAuditLogs"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the secret"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                  format: "int32"
                action:
                  type: "string"
                  description: "Action performed (e.g., created, accessed)"
                timestamp:
                  type: "string"
                  format: "date-time"
definitions:
  Secret:
    type: "object"
    properties:
      hash:
        type: "string"
        description: "Unique hash to identify the secret"
      secretText:
        type: "string"
        description: "The secret itself"
      createdAt:
        type: "string"
        format: "date-time"
        description: "The date and time of the creation"
      expiresAt:
        type: "string"
        format: "date-time"
        description: "The secret cannot be reached after this time"
      remainingViews:
        type: "integer"
        format: "int32"
        description: "How many times the secret can be viewed"
    xml:
      name: "Secret"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
